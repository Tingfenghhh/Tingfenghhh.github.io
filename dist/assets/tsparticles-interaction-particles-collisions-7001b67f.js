import{c as o,e as s,f as i,P as e,k as t}from"./tsparticles-engine-3b45a3b7.js";function n(s,i,e,t,n,a){const d=o(s.options.collisions.absorb.speed*n.factor/10,0,t);s.size.value+=d/2,e.size.value-=d,t<=a&&(e.size.value=0,e.destroy())}function a(o,e){s(i(o),i(e))}function d(o,s,i,e){switch(o.options.collisions.mode){case"absorb":!function(o,s,i,e){const t=o.getRadius(),a=s.getRadius();void 0===t&&void 0!==a?o.destroy():void 0!==t&&void 0===a?s.destroy():void 0!==t&&void 0!==a&&(t>=a?n(o,0,s,a,i,e):n(s,0,o,t,i,e))}(o,s,i,e);break;case"bounce":a(o,s);break;case"destroy":!function(o,s){o.unbreakable||s.unbreakable||a(o,s),void 0===o.getRadius()&&void 0!==s.getRadius()?o.destroy():void 0!==o.getRadius()&&void 0===s.getRadius()?s.destroy():void 0!==o.getRadius()&&void 0!==s.getRadius()&&(o.getRadius()>=s.getRadius()?o:s).destroy()}(o,s)}}class c extends e{constructor(o){super(o)}clear(){}init(){}async interact(o,s){const i=this.container,e=o.getPosition(),n=o.getRadius(),a=i.particles.quadTree.queryCircle(e,2*n);for(const c of a){if(o===c||!c.options.collisions.enable||o.options.collisions.mode!==c.options.collisions.mode||c.destroyed||c.spawning)continue;const a=c.getPosition(),r=c.getRadius();if(Math.abs(Math.round(e.z)-Math.round(a.z))>n+r)continue;t(e,a)>n+r||d(o,c,s,i.retina.pixelRatio)}}isEnabled(o){return o.options.collisions.enable}reset(){}}async function r(o){await o.addInteractor("particlesCollisions",(o=>new c(o)))}export{r as l};
